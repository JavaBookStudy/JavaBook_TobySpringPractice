<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- <bean id="connectionMaker" class="com.taxol.chapter1_8.DConnectionMaker" /> -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/tobyspring?useSSL=false"/>
		<property name="username" value="ssafy"/>
		<property name="password" value="ssafy"/>
	</bean>
	
	<bean id="userDao" class="com.taxol.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource"/>
		<property name="sqlService" ref="sqlService"/>
		<!-- <property name="sqlAdd" value="insert into users(id, name, password, level, login, recommend, email) values(?,?,?,?,?,?,?)"/>
		<property name="sqlMap">
			<map>
				<entry key="add" value="insert into users(id, name, password, level, login, recommend, email) values(?,?,?,?,?,?,?)" />
                <entry key="get" value="select * from users where id = ?" />
			</map>
		</property> -->
	</bean>
	<!-- sqlService 클래스를 통해 구현-->
	<bean id="sqlService" class="com.taxol.domain.sqlservice.SimpleSqlService">
		<property name="sqlMap">
			<map>
				<entry key="userAdd" value="insert into users(id, name, password, level, login, recommend, email) values(?,?,?,?,?,?,?)" />
				<entry key="userGet" value="select * from users where id = ?" />
				<entry key="userGetAll" value="select * from users order by id" />
				<entry key="userDeleteAll" value="delete from users" />
				<entry key="userGetCount" value="select count(*) from users" />
				<entry key="userUpdate" value="update users set name = ?, password = ?, level = ?, login = ?, recommend = ? where id = ?" />
			</map>
		</property>
	</bean>
	
	<!-- 이제 userService는 userServiceTx의 오브젝트가 주입 된다. -->
	<!-- <bean id="userService" class ="com.taxol.service.UserServiceTx">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="userService" ref="userServiceImpl"></property>
	</bean> -->
	
	<!-- UserService에 대한 트랜잭션 프록시 팩토리 빈 -->
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		<property name="interceptorNames">
			<list>
				<value>transactionAdvisor</value>
			</list>
		</property>
	</bean>
		
	<bean id = "userServiceImpl" class="com.taxol.service.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
		<property name="mailSender" ref="mailSender"/>
	</bean>
	<bean id = "transactionManager"
		  class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref = "dataSource"></property>	  
	</bean>
	<bean id="mailSender" class = "com.taxol.service.DummyMailSender"/>
	
	<!-- 어드바이스 -->
	<bean id ="transactionAdvice" class="com.taxol.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager"/>
	</bean>
	
	<!-- 스프링이 제공하는 포인트컷 클래스 사용 -->
	<bean id ="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*"/>
	</bean>
	
	<!-- 어드바이저 -->
	<bean id ="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice"/>
		<property name="pointcut" ref="transactionPointcut"/>
	</bean>
</beans>